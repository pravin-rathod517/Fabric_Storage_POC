name: Deploy to Microsoft Fabric

on:
  push:
    branches:
      - main   # Change if you want another branch to trigger deployment
  workflow_dispatch:   # Allows manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1 - Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2 - Install Power BI CLI (used for Fabric deployments too)
      - name: Install Power BI CLI
        run: |
          npm install -g powerbi-cli

      # Step 3 - Authenticate using Service Principal
      - name: Authenticate with Microsoft Fabric (Service Principal)
        run: |
          pbi login \
            --service-principal \
            --client-id ${{ secrets.CLIENT_ID }} \
            --client-secret ${{ secrets.CLIENT_SECRET }} \
            --tenant ${{ secrets.TENANT_ID }}

      # Step 4 - Deploy Reports
      - name: Deploy Reports
        run: |
          for file in reports/*.pbix; do
            echo "Deploying report: $file"
            pbi import report \
              --workspace-id ${{ secrets.WORKSPACE_ID }} \
              --name "$(basename "$file" .pbix)" \
              --file "$file" \
              --conflict CreateOrOverwrite
          done

      # Step 5 - Deploy Pipelines
      - name: Deploy Pipelines
        run: |
          for file in pipelines/*.json; do
            echo "Deploying pipeline: $file"
            pbi pipeline create \
              --workspace-id ${{ secrets.WORKSPACE_ID }} \
              --file "$file" \
              --conflict CreateOrOverwrite
          done

      # Step 6 - Deploy Notebooks
      - name: Deploy Notebooks
        run: |
          for file in notebooks/*.ipynb; do
            echo "Deploying notebook: $file"
            pbi notebook create \
              --workspace-id ${{ secrets.WORKSPACE_ID }} \
              --file "$file" \
              --conflict CreateOrOverwrite
          done
